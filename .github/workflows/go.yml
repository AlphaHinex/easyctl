name: Go

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  once:
    name: Create GitHub release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create a release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: true

  build:
    needs: once
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: true
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.16
        buildDirectory: "${{ github.workspace }}/${{ matrix.os }}"
#      run: go build -o easyctl
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.once.outputs.upload_url }}
        asset_path: ${{ github.workspace }}/${{ matrix.os }}/easyctl
        asset_name: easyctl-${{ matrix.os }}
        asset_content_type: application/octet-stream

  build-doc:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Node
        uses: actions/setup-node@v2
        with:
          node-version: 12.18.2
      - name: install gitbook
        run: npm install gitbook-cli gitbook-summary -g
        working-directory: book
      - name: set timezone
        run: sudo ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime
      - name: install
        run: gitbook install
        working-directory: book
      - name: generate-toc
        run: book sm --disableTitleFormatting
        working-directory: book
      - name: build
        run: gitbook build
        working-directory: book
      - name: install git
        run: sudo apt-get install git -y
      - name: publish
        env:
          ACCESS_TOKEN: ${{ secrets.EASYCTL_PUBLISH_TOKEN }}
        run: |
          mkdir -p deploy-doc-dir
          cd deploy-doc-dir
          rm -rf *
          git init
          git config user.name "weiliang-ms"
          git config user.email "xzx.weiliang@gmail.com"
          ls -R ../book/_book
          mv ../book/_book docs
          git add docs
          git commit -m "Update docs"
          git push --force "https://$ACCESS_TOKEN@github.com/weiliang-ms/easyctl" master:docs
