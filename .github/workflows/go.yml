name: Go

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  releases-matrix:
    name: Release Go Binary
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # build and publish in parallel: linux/386, linux/amd64, windows/386, windows/amd64, darwin/amd64
        goos: [linux, windows, darwin]
        goarch: ["386", amd64]
        exclude:
          - goarch: "386"
#            goos: darwin
    steps:
      - uses: actions/checkout@v2
      - run: sudo ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime
      - name: get date
        id: current_time
        run: echo "::set-output name=date::$(date +%Y-%m-%d-%H:%M:%S)"
      - name: branch name
        id: branch_name
        run: echo "::set-output name=name::$(git rev-parse --abbrev-ref HEAD)"
      - uses: wangyoucao577/go-release-action@v1.20
        with:
          github_token: ${{ secrets.EASYCTL_PUBLISH_TOKEN }}
          goos: ${{ matrix.goos }}
          goarch: ${{ matrix.goarch }}
          build_flags: "-gcflags=-trimpath=$GOPATH -asmflags=-trimpath=$GOPATH"
          ldflags: "-w -s -X 'main.BuildTime=${{ steps.current_time.outputs.date }}' -X 'main.GitTag=${{ steps.branch_name.outputs.name }}'"
          goversion: "1.16"
          project_path: "."
          binary_name: "easyctl"
          release_tag: "latest"
          overwrite: true
          extra_files: LICENSE README.md

  build-doc:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Node
        uses: actions/setup-node@v2
        with:
          node-version: 12.18.2
      - name: install gitbook
        run: npm install gitbook-cli gitbook-summary -g
        working-directory: book
      - name: set timezone
        run: sudo ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime
      - name: install
        run: gitbook install
        working-directory: book
      - name: generate-toc
        run: book sm --disableTitleFormatting
        working-directory: book
      - name: build
        run: gitbook build
        working-directory: book
      - name: install git
        run: sudo apt-get install git -y
      - name: publish
        env:
          ACCESS_TOKEN: ${{ secrets.EASYCTL_PUBLISH_TOKEN }}
        run: |
          mkdir -p deploy-doc-dir
          cd deploy-doc-dir
          rm -rf *
          git init
          git config user.name "weiliang-ms"
          git config user.email "xzx.weiliang@gmail.com"
          ls -R ../book/_book
          mv ../book/_book docs
          git add docs
          git commit -m "Update docs"
          git push --force "https://$ACCESS_TOKEN@github.com/weiliang-ms/easyctl" master:docs
